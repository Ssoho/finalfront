{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\uBC15\\uD604\\uD638\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\react-jwt-auth\\\\src\\\\components\\\\Searchresult.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Searchresult = _ref => {\n  let {\n    searchResults\n  } = _ref;\n  // const searchData = location.state.data;\n  const {\n    resultdata1,\n    resultdata2,\n    resultdata3\n  } = searchResults;\n  console.log(resultdata1);\n  console.log(resultdata2);\n  console.log(resultdata3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cent\",\n    style: {\n      margin: \"20px\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"td800\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [resultdata1.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: resultdata1.slice(0, 5).map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                fontSize: \"16px\",\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Song Name: \", result.songName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Artist Name: \", result.artistName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 15\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), resultdata2.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: resultdata2.slice(0, 5).map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Song Name: \", result.songName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Artist Name: \", result.artistName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), resultdata3.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: resultdata3.slice(0, 5).map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Song Name: \", result.songName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Artist Name: \", result.artistName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Searchresult;\nexport default Searchresult;\nvar _c;\n$RefreshReg$(_c, \"Searchresult\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Searchresult","_ref","searchResults","resultdata1","resultdata2","resultdata3","console","log","className","style","margin","width","children","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","length","slice","map","result","index","fontSize","textAlign","songName","artistName","_c","$RefreshReg$"],"sources":["C:/박현호/프로젝트/react-jwt-auth/src/components/Searchresult.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Searchresult = ( { searchResults } ) => {\r\n  // const searchData = location.state.data;\r\n  const { resultdata1, resultdata2, resultdata3 } = searchResults;\r\n  console.log(resultdata1);\r\n  console.log(resultdata2);\r\n  console.log(resultdata3);\r\n\r\n\r\n  return (\r\n    <div className=\"cent\" style={{ margin: \"20px\", width: \"100%\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <table className=\"td800\">\r\n      \r\n      <h2>검색 결과</h2>\r\n      <tbody>\r\n        \r\n        \r\n        {resultdata1.length > 0 ? (\r\n          <div>\r\n      \r\n            \r\n            {resultdata1.slice(0, 5).map((result, index) => (\r\n            <tr key={index} style={{ fontSize: \"16px\", textAlign: \"left\" }}>\r\n              <li key={index}>\r\n              <p>Song Name: {result.songName}</p>\r\n              <p>Artist Name: {result.artistName}</p>\r\n            </li>\r\n            </tr>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div>No results</div>\r\n        )}        \r\n        {resultdata2.length > 0 ? (\r\n          <div>\r\n            \r\n            {resultdata2.slice(0, 5).map((result, index) => (\r\n              <li key={index}>\r\n              <p>Song Name: {result.songName}</p>\r\n              <p>Artist Name: {result.artistName}</p>\r\n            </li>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div>No results</div>\r\n        )}\r\n        {resultdata3.length > 0 ? (\r\n          <div>\r\n            \r\n            {resultdata3.slice(0, 5).map((result, index) => (\r\n              <li key={index}>\r\n              <p>Song Name: {result.songName}</p>\r\n              <p>Artist Name: {result.artistName}</p>\r\n            </li>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div>No results</div>\r\n        )}        \r\n      </tbody>\r\n      </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchresult;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}