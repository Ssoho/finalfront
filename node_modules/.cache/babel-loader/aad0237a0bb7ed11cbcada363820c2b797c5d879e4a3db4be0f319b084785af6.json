{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\uBC15\\uD604\\uD638\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\react-jwt-auth\\\\src\\\\components\\\\Recommend1.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Recommend1(props) {\n  _s();\n  // const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isHovering, setIsHovering] = useState(false); // 마우스 커서 상태\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  // const [selectedItems, setSelectedItems] = useState([]);\n  const [filteredData, setFilteredData] = useState([]); // 초기에 랜덤으로 n개의 아이템 선택\n\n  const fetchTags = async () => {\n    try {\n      setData(null);\n      const response = await axios.get('http://localhost:8080/api/tag');\n      setData(response.data);\n      setLoading(false);\n    } catch (e) {\n      setError(e);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTags();\n  }, []);\n  useEffect(() => {\n    setFilteredData(getRandomItems(data, 8));\n  }, [data]);\n  useEffect(() => {\n    props.setSelectedItems(selectedItems);\n  }, [selectedItems]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  const handleRandomize = () => {\n    setFilteredData(getRandomItems(data, 8)); // 새로운 랜덤 아이템으로 filteredData 업데이트\n  };\n\n  function getRandomItems(arr, count) {\n    if (!arr || arr.length === 0) {\n      return [];\n    }\n    const shuffled = arr.sort(() => 0.5 - Math.random()); // 배열을 랜덤하게 섞기\n    return shuffled.slice(0, count); // 지정된 개수만큼의 아이템 선택\n  }\n  ;\n  const handleRemoveItemClick = item => {\n    setSelectedItems(prevItems => {\n      const newItems = new Set(prevItems);\n      newItems.delete(item);\n      return newItems;\n    });\n  };\n\n  // const handleItemClick = (item) => {\n  //   setSelectedItems((prevItems) => {\n  //     if (prevItems.includes(item)) {\n  //       return prevItems.filter((prevItem) => prevItem !== item);\n  //     } else {\n  //       if (prevItems.length >= 5) {\n  //         return prevItems;\n  //       }\n  //       return [...prevItems, item];\n  //     }\n  //   });\n  // };    \n\n  function calculateFontSize(songName) {\n    return songName.length > 10 ? \"12px\" : \"15px\";\n  }\n  const handleItemClick = item => {\n    setSelectedItems(prevItems => {\n      const newItems = new Set(prevItems);\n      if (newItems.has(item)) {\n        newItems.delete(item);\n      } else {\n        if (newItems.size >= 5) {\n          return newItems;\n        }\n        newItems.add(item);\n      }\n      return newItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"recommend1-container\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              style: {\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: '24px',\n                  textAlign: 'left'\n                },\n                children: \"\\uB098\\uB294 \\uC774\\uB7F0 \\uC7A5\\uB974\\uAC00 \\uC88B\\uC544\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"refresh-btn1\",\n                onClick: handleRandomize,\n                children: \"\\uB2E4\\uB978 \\uC7A5\\uB974 \\uBCF4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), [0, 1].map((t, id) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: \"left\"\n              },\n              children: filteredData.map((val, idx) => {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"td200\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"select-item1\",\n                        onClick: () => {\n                          handleItemClick(filteredData[idx + id * 4].songName);\n                        },\n                        style: {\n                          fontSize: filteredData[idx + id * 4].songName.length > 8 ? '12px' : '15px'\n                        },\n                        children: filteredData[idx + id * 4].songName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this), idx === 3 || idx === 7 ? /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 47\n                  }, this) : null]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: '16px',\n                  textAlign: 'left'\n                },\n                children: Array.from(selectedItems).map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"selected-item1\",\n                  onMouseEnter: () => setIsHovering(true),\n                  onMouseLeave: () => setIsHovering(false),\n                  onClick: () => handleRemoveItemClick(item),\n                  children: [item, \" \", isHovering && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"remove-icon\",\n                    onClick: () => handleRemoveItemClick(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 19\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Recommend1, \"8rN0FJ8mxlfxULjRqZ9qQC6NQBs=\");\n_c = Recommend1;\nexport default Recommend1;\nvar _c;\n$RefreshReg$(_c, \"Recommend1\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Recommend1","props","_s","data","setData","loading","setLoading","error","setError","isHovering","setIsHovering","selectedItems","setSelectedItems","Set","filteredData","setFilteredData","fetchTags","response","get","e","getRandomItems","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRandomize","arr","count","length","shuffled","sort","Math","random","slice","handleRemoveItemClick","item","prevItems","newItems","delete","calculateFontSize","songName","handleItemClick","has","size","add","style","display","justifyContent","className","colSpan","textAlign","fontSize","onClick","map","t","id","val","idx","Array","from","index","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/박현호/프로젝트/react-jwt-auth/src/components/Recommend1.js"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nfunction Recommend1(props){\r\n    // const navigate = useNavigate();\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [isHovering, setIsHovering] = useState(false); // 마우스 커서 상태\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    // const [selectedItems, setSelectedItems] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]); // 초기에 랜덤으로 n개의 아이템 선택\r\n\r\n    const fetchTags = async () => {\r\n        try {\r\n            setData(null);\r\n            const response = await axios.get('http://localhost:8080/api/tag');\r\n            setData(response.data);\r\n            setLoading(false);\r\n        } catch (e) {\r\n            setError(e);\r\n            setLoading(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchTags();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredData(getRandomItems(data, 8));\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n      props.setSelectedItems(selectedItems);\r\n    }, [selectedItems]);    \r\n\r\n    if (loading) return <div>로딩중..</div>;\r\n    if (error) return <div>에러가 발생했습니다.</div>;\r\n    if (!data) return null;    \r\n\r\n    const handleRandomize = () => {\r\n      setFilteredData(getRandomItems(data, 8)); // 새로운 랜덤 아이템으로 filteredData 업데이트\r\n    };\r\n\r\n    function getRandomItems(arr, count) {\r\n        if (!arr || arr.length === 0) {\r\n            return [];\r\n        }\r\n      const shuffled = arr.sort(() => 0.5 - Math.random()); // 배열을 랜덤하게 섞기\r\n      return shuffled.slice(0, count); // 지정된 개수만큼의 아이템 선택\r\n    };\r\n\r\n    const handleRemoveItemClick = (item) => {\r\n      setSelectedItems((prevItems) => {\r\n        const newItems = new Set(prevItems);\r\n        newItems.delete(item);\r\n        return newItems;\r\n      });\r\n    };\r\n\r\n    // const handleItemClick = (item) => {\r\n    //   setSelectedItems((prevItems) => {\r\n    //     if (prevItems.includes(item)) {\r\n    //       return prevItems.filter((prevItem) => prevItem !== item);\r\n    //     } else {\r\n    //       if (prevItems.length >= 5) {\r\n    //         return prevItems;\r\n    //       }\r\n    //       return [...prevItems, item];\r\n    //     }\r\n    //   });\r\n    // };    \r\n\r\n    function calculateFontSize(songName) {\r\n      return songName.length > 10 ? \"12px\" : \"15px\";\r\n    }    \r\n\r\n    const handleItemClick = (item) => {\r\n      setSelectedItems((prevItems) => {\r\n        const newItems = new Set(prevItems);\r\n  \r\n        if (newItems.has(item)) {\r\n          newItems.delete(item);\r\n        } else {\r\n          if (newItems.size >= 5) {\r\n            return newItems;\r\n          }\r\n          newItems.add(item);\r\n        }\r\n  \r\n        return newItems;\r\n      });\r\n    };    \r\n\r\n      return <>\r\n      \r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <table className = 'recommend1-container' >\r\n          <tbody >\r\n          <tr>\r\n                  <td colSpan=\"2\" style={{ textAlign: 'left' }}>\r\n                    <p style = {{ fontSize : '24px', textAlign: 'left' }}>나는 이런 장르가 좋아요</p>\r\n                  </td>\r\n\r\n                  <td>\r\n                  <button className = 'refresh-btn1' onClick={handleRandomize}>다른 장르 보기</button>\r\n                  </td>\r\n            </tr>    \r\n            \r\n                \r\n                {[0,1].map((t,id) => {\r\n                return(\r\n                <tr style={{   textAlign: \"left\"  }} >\r\n                {filteredData.map((val, idx) => {\r\n                    return (\r\n                    <React.Fragment key={idx}>\r\n                    <td className=\"td200\"> \r\n                        <div>\r\n                        <span className='select-item1'\r\n                            onClick={() => { handleItemClick(filteredData[idx+id*4].songName) }}\r\n                            style={{ fontSize: filteredData[idx+id*4].songName.length > 8 ? '12px' : '15px' }}\r\n                        >\r\n                            {filteredData[idx+id*4].songName}\r\n                        </span>\r\n                        </div>\r\n                    </td>\r\n                    {idx === 3 || idx === 7 ? <td colSpan=\"4\"></td> : null}                    \r\n                    {/* { idx === 3 || idx === 7 ? ( </tr> <tr style={{   textAlign: \"left\"  }} > ) : null } */}\r\n                    </React.Fragment>\r\n                    );\r\n                })}\r\n              </tr>               \r\n              )})}\r\n                \r\n\r\n            {/* <tr style={{   textAlign: \"left\"  }}>\r\n              <td className=\"td200\">\r\n                <div>\r\n                {filteredData[0] && (                  \r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[0]?.songName) }} onClick={() => handleItemClick(filteredData[0]?.songName)}>\r\n                    {filteredData[0]?.songName}\r\n                  </span>\r\n                )}                  \r\n                </div>\r\n              </td>\r\n              <td className=\"td200\">\r\n                <div>\r\n                {filteredData[1] && (                       \r\n                  <span className='select-item1'style={{ fontSize: calculateFontSize(filteredData[1]?.songName) }}  onClick={() => handleItemClick(filteredData[1]?.songName)}>\r\n                    {filteredData[1]?.songName}\r\n                  </span>\r\n                )}                      \r\n                </div>\r\n              </td>\r\n              <td className=\"td200\"> \r\n                <div>\r\n                {filteredData[2] && (      \r\n                  <span className='select-item1'style={{ fontSize: calculateFontSize(filteredData[2]?.songName) }}  onClick={() => handleItemClick(filteredData[2]?.songName)}>\r\n                    {filteredData[2]?.songName}\r\n                  </span>\r\n                )}\r\n                </div>\r\n              </td>\r\n              <td className=\"td200\">\r\n                <div>\r\n                {filteredData[3] && (      \r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[3]?.songName) }} onClick={() => handleItemClick(filteredData[3]?.songName)}>\r\n                    {filteredData[3]?.songName}\r\n                  </span>\r\n                )}\r\n                </div>\r\n              </td>\r\n            </tr> */}\r\n            {/* <tr style={{ fontSize : '16px', textAlign: 'left' }}>\r\n              <td className=\"td200\">\r\n                <div>\r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[4]?.songName) }} onClick={() => handleItemClick(filteredData[4]?.songName)}>\r\n                    {filteredData[4]?.songName}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"td200\">\r\n                <div>\r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[5]?.songName) }} onClick={() => handleItemClick(filteredData[5]?.songName)}>\r\n                    {filteredData[5]?.songName}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"td200\">\r\n                <div>\r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[6]?.songName) }} onClick={() => handleItemClick(filteredData[6]?.songName)}>\r\n                    {filteredData[6]?.songName}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td className=\"td200\">\r\n                <div>\r\n                  <span className='select-item1' style={{ fontSize: calculateFontSize(filteredData[7]?.songName) }} onClick={() => handleItemClick(filteredData[7]?.songName)}>\r\n                    {filteredData[7]?.songName}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n            </tr>     */}\r\n            <tr>\r\n          <td colSpan=\"4\" style={{ textAlign: 'left' }}>\r\n            <p style={{ fontSize: '16px', textAlign: 'left' }}>\r\n               {Array.from(selectedItems).map((item, index) => (\r\n                <span className=\"selected-item1\" key={index}\r\n                onMouseEnter={() => setIsHovering(true)}\r\n                onMouseLeave={() => setIsHovering(false)}\r\n                onClick={() => handleRemoveItemClick(item)}\r\n                >{item} {isHovering && (\r\n                  <span className=\"remove-icon\" onClick={() => handleRemoveItemClick(item)}></span>\r\n                )}</span>\r\n              ))}\r\n            </p>                   \r\n          </td>\r\n          </tr>               \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      </>\r\n\r\n}\r\n\r\nexport default Recommend1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}