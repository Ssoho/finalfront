{"ast":null,"code":"export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.accessToken) {\n    return {\n      Authorization: 'Bearer ' + user.accessToken\n    }; // for Spring Boot back-end\n  } else {\n    return {};\n  }\n}\n// Authorization: Bearer [header].[payload].[signature]\n// return { Authorization: 'Bearer ' + user.accessToken }\n// return { 'x-access-token': user.accessToken };       // for Node.js Express back-end","map":{"version":3,"names":["authHeader","user","JSON","parse","localStorage","getItem","accessToken","Authorization"],"sources":["C:/박현호/프로젝트/react-jwt-auth/src/services/auth-header.js"],"sourcesContent":["export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n  } else {\n    return {};\n  }\n}\n// Authorization: Bearer [header].[payload].[signature]\n// return { Authorization: 'Bearer ' + user.accessToken }\n// return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAAA,EAAG;EACnC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAW,EAAE;IAC5B,OAAO;MAAEC,aAAa,EAAE,SAAS,GAAGN,IAAI,CAACK;IAAY,CAAC,CAAC,CAAC;EAC1D,CAAC,MAAM;IACL,OAAO,CAAC,CAAC;EACX;AACF;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}